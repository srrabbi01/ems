# Generated by Django 3.2.9 on 2022-04-03 08:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=122)),
                ('email', models.CharField(max_length=122)),
                ('desc', models.TextField(max_length=255)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('details', models.TextField(max_length=1000, null=True)),
                ('equip_charge', models.FloatField(blank=True, max_length=250, null=True)),
                ('files', models.FileField(blank=True, null=True, upload_to='invoice_file')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('status', models.CharField(blank=True, choices=[('Paid', 'Paid'), ('Unpaid', 'Unpaid')], default='Unpaid', max_length=122, null=True)),
                ('paid', models.BooleanField(default=False, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=255, null=True)),
                ('cost', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('servicereq_no', models.CharField(max_length=122, null=True)),
                ('title', models.CharField(max_length=250, null=True)),
                ('details', models.TextField(max_length=1000, null=True)),
                ('files', models.FileField(blank=True, null=True, upload_to='service_file')),
                ('priority', models.CharField(choices=[('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], max_length=122, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('status', models.CharField(blank=True, choices=[('New', 'New'), ('Waitting on Customer', 'Waitting on Customer'), ('In Progress', 'In Progress'), ('Fixed', 'Fixed'), ('Closed', 'Closed'), ('Cancelled', 'Cancelled')], default='new', max_length=122, null=True)),
                ('assigned', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('service_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_dashboard.servicecategory')),
            ],
        ),
        migrations.CreateModel(
            name='UserRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_no', models.BigIntegerField(null=True)),
                ('name', models.CharField(max_length=122, null=True)),
                ('email', models.EmailField(blank=True, max_length=122, null=True)),
                ('phone', models.CharField(max_length=122, null=True)),
                ('other_phone', models.CharField(blank=True, max_length=122, null=True)),
                ('registration_type', models.CharField(blank=True, choices=[('', 'Please Select'), ('Residential', 'Residential'), ('Commercial', 'Commercial'), ('Other', 'Other')], max_length=122, null=True)),
                ('role', models.CharField(choices=[('customer', 'customer'), ('admin', 'admin'), ('technician', 'technician')], default='customer', max_length=122, null=True)),
                ('business_name', models.CharField(blank=True, max_length=122, null=True)),
                ('country', models.CharField(blank=True, max_length=122, null=True)),
                ('division', models.CharField(blank=True, max_length=122, null=True)),
                ('district', models.CharField(blank=True, max_length=122, null=True)),
                ('upazila', models.CharField(blank=True, max_length=122, null=True)),
                ('post_office_or_union', models.CharField(blank=True, max_length=122, null=True)),
                ('house_info', models.CharField(blank=True, max_length=122, null=True)),
                ('location', models.CharField(blank=True, max_length=999, null=True)),
                ('nid', models.CharField(blank=True, max_length=122, null=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='image')),
                ('active', models.BooleanField(default=False, null=True)),
                ('tech_percentage', models.FloatField(default=0)),
                ('date', models.DateField(auto_now_add=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TempServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_title', models.CharField(max_length=255, null=True)),
                ('rejected_tech_id', models.CharField(default='', max_length=255, null=True)),
                ('nearest_tech', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_dashboard.userregistration')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_dashboard.servicerequest')),
            ],
        ),
        migrations.CreateModel(
            name='TechnicianPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transition_id', models.CharField(max_length=255, null=True)),
                ('payment_method', models.CharField(max_length=255, null=True)),
                ('payment_date', models.DateField(default=django.utils.timezone.now)),
                ('amount', models.FloatField(default=0)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('paid', models.BooleanField(default=False, editable=False)),
                ('invoice', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_dashboard.invoice')),
            ],
        ),
        migrations.AddField(
            model_name='servicerequest',
            name='technician',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='technician', to='app_dashboard.userregistration'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=500, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_dashboard.servicerequest')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=999999, null=True)),
                ('sent_date', models.DateTimeField(auto_now_add=True)),
                ('seen', models.BooleanField(default=False)),
                ('service_ticket', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_dashboard.servicerequest')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app_dashboard.userregistration')),
            ],
            options={
                'ordering': ['-sent_date'],
            },
        ),
        migrations.AddField(
            model_name='invoice',
            name='service',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app_dashboard.servicerequest'),
        ),
        migrations.CreateModel(
            name='CustomerPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transition_id', models.CharField(max_length=255, null=True)),
                ('payment_method', models.CharField(max_length=255, null=True)),
                ('payment_date', models.DateField(default=django.utils.timezone.now)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('invoice', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_dashboard.invoice')),
            ],
        ),
    ]
